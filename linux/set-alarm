#!/usr/bin/env bash

function run_dmenu() {
    dmenu -l 10 \
      -p "Set alarm (HH:MM, 24-hour format):" -l 1 \
        -b \
        -fn "IosevkaTerm NF:size=14:style=Regular" \
        -nb "#222222" \
        -nf "#bbbbbb" \
        -sb "#005577" \
        -sf "#eeeeee"
}

function run_dmenu3() {
    dmenu -l 10 \
      -p "Optional note for alarm:" -l 1 \
        -b \
        -fn "IosevkaTerm NF:size=14:style=Regular" \
        -nb "#222222" \
        -nf "#bbbbbb" \
        -sb "#005577" \
        -sf "#eeeeee"
}

# Prompt for the alarm time in HH:MM format
alarm_time=$(echo -n "" | run_dmenu)

# Check if the time is in valid HH:MM format
if ! [[ "$alarm_time" =~ ^([01]?[0-9]|2[0-3]):([0-5][0-9])$ ]]; then
  notify-send -r 27072 -i "$ICONS_DIR"/error.svg "Alarm Setter:" "Invalid time format. Please enter time in HH:MM format."
  exit 1
fi

# Prompt for an optional note for the alarm
note=$(echo -n "" | run_dmenu3)

# Extract hours and minutes from the alarm time
alarm_hour=$(echo "$alarm_time" | cut -d: -f1)
alarm_minute=$(echo "$alarm_time" | cut -d: -f2)

# Get the current time in hours and minutes
current_hour=$(date +%H)
current_minute=$(date +%M)

# Convert current time and alarm time to seconds since midnight
current_seconds=$((current_hour * 3600 + current_minute * 60))
alarm_seconds=$((alarm_hour * 3600 + alarm_minute * 60))

# If the alarm time is earlier than the current time, set it for the next day
if [ "$alarm_seconds" -le "$current_seconds" ]; then
  alarm_seconds=$((alarm_seconds + 86400))  # Add 24 hours (86400 seconds)
fi

# Calculate the time remaining until the alarm
time_to_wait=$((alarm_seconds - current_seconds))

# Notify the user that the alarm has been set
notify-send -r 27072 -i "$ICONS_DIR"/time.svg "Alarm Set" "Alarm set for $alarm_time with note: $note"

# Wait for the specified time
sleep $time_to_wait

# Send final notification once the alarm goes off
if [ -n "$note" ]; then
  notify-send -r 27072 -i "$ICONS_DIR"/alarm.svg -u critical "ALARM!" "Time's up! Note: $note"
else
  notify-send -r 27072 -i "$ICONS_DIR"/alarm.svg -u critical "ALARM!" "Time's up at $alarm_time"
fi

mpv "$HOME"/resource/audio/notification/notification001.wav
# Print final message
printf "\n"
